#version 450

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

struct VoxelData
{
    vec2 x_range;
    vec2 y_range;
    vec2 z_range;
    vec4 color;
} voxelData;

layout(set = 0, binding = 0) buffer Data {
    VoxelData data[];
} data;

layout(set = 1, binding = 0, rgba8) uniform writeonly image2D img_out; 

void main() {
    vec3 lookingDir = vec3(0.0, 0.0, 1.0);
    vec3 currentPos = vec3(0.0, 0.0, 0.0);


    uint idx = gl_GlobalInvocationID.x;
    data.data[idx].x_range *= 12;

    vec4 color_in_the_end = vec4(0.0, 0.0, 1.0, 1.0);
    ivec2 IDxy = ivec2(gl_GlobalInvocationID.xy);
    imageStore(img_out, IDxy, vec4(color_in_the_end.b, color_in_the_end.g, color_in_the_end.r, color_in_the_end.a));
}